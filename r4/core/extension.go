// GENERATE CODE - DO NOT EDIT
//
// This file is generated by the FHIR Fhenix code generator tool, which can be
// located at https://github.com/friendly-fhir/fhenix.

package fhir

import (
	"github.com/friendly-fhir/go-fhir/r4/core/internal/profileimpl"
)

// Base StructureDefinition for Extension Type: Optional Extension Element -
// found in all resources.
//
// Meta Details:
//
//   - Package IG: hl7.fhir.r4.core@4.0.1
//   - StructureDefinition: http://hl7.org/fhir/StructureDefinition/Extension
//   - Source File: StructureDefinition-Extension.json
type Extension struct {

	// May be used to represent additional information that is not part of the
	// basic definition of the element. To make the use of extensions safe and
	// manageable, there is a strict set of governance applied to the definition
	// and use of extensions. Though any implementer can define an extension, there
	// is a set of requirements that SHALL be met as part of the definition of the
	// extension.
	Extension []*Extension `fhirpath:"extension"`

	// Unique id for the element within a resource (for internal references). This
	// may be any string value that does not contain spaces.
	ID string `fhirpath:"id"`

	// Source of the definition for the extension code - a logical name or a URL.
	URL string `fhirpath:"url"`

	// Value of extension - must be one of a constrained set of the data types (see
	// [Extensibility](extensibility.html) for a list).
	Value Element `fhirpath:"value"`

	profileimpl.BaseExtension
	profileimpl.BaseElement
}

// GetExtension returns the value of the field Extension.
// This function is safe to call on nil pointers, and will return the zero value
// instead.
func (e *Extension) GetExtension() []*Extension {
	if e == nil {
		return nil
	}
	return e.Extension
}

// GetID returns the value of the field ID.
// This function is safe to call on nil pointers, and will return the zero value
// instead.
func (e *Extension) GetID() string {
	if e == nil {
		return ""
	}
	return e.ID
}

// GetURL returns the value of the field URL.
// This function is safe to call on nil pointers, and will return the zero value
// instead.
func (e *Extension) GetURL() string {
	if e == nil {
		return ""
	}
	return e.URL
}

// GetValue returns the value of the field Value.
// This function is safe to call on nil pointers, and will return the zero value
// instead.
func (e *Extension) GetValue() Element {
	if e == nil {
		return nil
	}
	return e.Value
}

// GetValueBase64Binary returns the value of the field Value.
func (e *Extension) GetValueBase64Binary() *Base64Binary {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Base64Binary)
	if !ok {
		return nil
	}
	return val
}

// GetValueBoolean returns the value of the field Value.
func (e *Extension) GetValueBoolean() *Boolean {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Boolean)
	if !ok {
		return nil
	}
	return val
}

// GetValueCanonical returns the value of the field Value.
func (e *Extension) GetValueCanonical() *Canonical {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Canonical)
	if !ok {
		return nil
	}
	return val
}

// GetValueCode returns the value of the field Value.
func (e *Extension) GetValueCode() *Code {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Code)
	if !ok {
		return nil
	}
	return val
}

// GetValueDate returns the value of the field Value.
func (e *Extension) GetValueDate() *Date {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Date)
	if !ok {
		return nil
	}
	return val
}

// GetValueDateTime returns the value of the field Value.
func (e *Extension) GetValueDateTime() *DateTime {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*DateTime)
	if !ok {
		return nil
	}
	return val
}

// GetValueDecimal returns the value of the field Value.
func (e *Extension) GetValueDecimal() *Decimal {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Decimal)
	if !ok {
		return nil
	}
	return val
}

// GetValueID returns the value of the field Value.
func (e *Extension) GetValueID() *ID {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*ID)
	if !ok {
		return nil
	}
	return val
}

// GetValueInstant returns the value of the field Value.
func (e *Extension) GetValueInstant() *Instant {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Instant)
	if !ok {
		return nil
	}
	return val
}

// GetValueInteger returns the value of the field Value.
func (e *Extension) GetValueInteger() *Integer {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Integer)
	if !ok {
		return nil
	}
	return val
}

// GetValueMarkdown returns the value of the field Value.
func (e *Extension) GetValueMarkdown() *Markdown {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Markdown)
	if !ok {
		return nil
	}
	return val
}

// GetValueOID returns the value of the field Value.
func (e *Extension) GetValueOID() *OID {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*OID)
	if !ok {
		return nil
	}
	return val
}

// GetValuePositiveInt returns the value of the field Value.
func (e *Extension) GetValuePositiveInt() *PositiveInt {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*PositiveInt)
	if !ok {
		return nil
	}
	return val
}

// GetValueString returns the value of the field Value.
func (e *Extension) GetValueString() *String {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*String)
	if !ok {
		return nil
	}
	return val
}

// GetValueTime returns the value of the field Value.
func (e *Extension) GetValueTime() *Time {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Time)
	if !ok {
		return nil
	}
	return val
}

// GetValueUnsignedInt returns the value of the field Value.
func (e *Extension) GetValueUnsignedInt() *UnsignedInt {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*UnsignedInt)
	if !ok {
		return nil
	}
	return val
}

// GetValueURI returns the value of the field Value.
func (e *Extension) GetValueURI() *URI {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*URI)
	if !ok {
		return nil
	}
	return val
}

// GetValueURL returns the value of the field Value.
func (e *Extension) GetValueURL() *URL {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*URL)
	if !ok {
		return nil
	}
	return val
}

// GetValueUUID returns the value of the field Value.
func (e *Extension) GetValueUUID() *UUID {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*UUID)
	if !ok {
		return nil
	}
	return val
}

// GetValueAddress returns the value of the field Value.
func (e *Extension) GetValueAddress() *Address {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Address)
	if !ok {
		return nil
	}
	return val
}

// GetValueAge returns the value of the field Value.
func (e *Extension) GetValueAge() *Age {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Age)
	if !ok {
		return nil
	}
	return val
}

// GetValueAnnotation returns the value of the field Value.
func (e *Extension) GetValueAnnotation() *Annotation {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Annotation)
	if !ok {
		return nil
	}
	return val
}

// GetValueAttachment returns the value of the field Value.
func (e *Extension) GetValueAttachment() *Attachment {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Attachment)
	if !ok {
		return nil
	}
	return val
}

// GetValueCodeableConcept returns the value of the field Value.
func (e *Extension) GetValueCodeableConcept() *CodeableConcept {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*CodeableConcept)
	if !ok {
		return nil
	}
	return val
}

// GetValueCoding returns the value of the field Value.
func (e *Extension) GetValueCoding() *Coding {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Coding)
	if !ok {
		return nil
	}
	return val
}

// GetValueContactPoint returns the value of the field Value.
func (e *Extension) GetValueContactPoint() *ContactPoint {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*ContactPoint)
	if !ok {
		return nil
	}
	return val
}

// GetValueCount returns the value of the field Value.
func (e *Extension) GetValueCount() *Count {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Count)
	if !ok {
		return nil
	}
	return val
}

// GetValueDistance returns the value of the field Value.
func (e *Extension) GetValueDistance() *Distance {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Distance)
	if !ok {
		return nil
	}
	return val
}

// GetValueDuration returns the value of the field Value.
func (e *Extension) GetValueDuration() *Duration {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Duration)
	if !ok {
		return nil
	}
	return val
}

// GetValueHumanName returns the value of the field Value.
func (e *Extension) GetValueHumanName() *HumanName {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*HumanName)
	if !ok {
		return nil
	}
	return val
}

// GetValueIdentifier returns the value of the field Value.
func (e *Extension) GetValueIdentifier() *Identifier {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Identifier)
	if !ok {
		return nil
	}
	return val
}

// GetValueMoney returns the value of the field Value.
func (e *Extension) GetValueMoney() *Money {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Money)
	if !ok {
		return nil
	}
	return val
}

// GetValuePeriod returns the value of the field Value.
func (e *Extension) GetValuePeriod() *Period {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Period)
	if !ok {
		return nil
	}
	return val
}

// GetValueQuantity returns the value of the field Value.
func (e *Extension) GetValueQuantity() *Quantity {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Quantity)
	if !ok {
		return nil
	}
	return val
}

// GetValueRange returns the value of the field Value.
func (e *Extension) GetValueRange() *Range {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Range)
	if !ok {
		return nil
	}
	return val
}

// GetValueRatio returns the value of the field Value.
func (e *Extension) GetValueRatio() *Ratio {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Ratio)
	if !ok {
		return nil
	}
	return val
}

// GetValueReference returns the value of the field Value.
func (e *Extension) GetValueReference() *Reference {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Reference)
	if !ok {
		return nil
	}
	return val
}

// GetValueSampledData returns the value of the field Value.
func (e *Extension) GetValueSampledData() *SampledData {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*SampledData)
	if !ok {
		return nil
	}
	return val
}

// GetValueSignature returns the value of the field Value.
func (e *Extension) GetValueSignature() *Signature {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Signature)
	if !ok {
		return nil
	}
	return val
}

// GetValueTiming returns the value of the field Value.
func (e *Extension) GetValueTiming() *Timing {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Timing)
	if !ok {
		return nil
	}
	return val
}

// GetValueContactDetail returns the value of the field Value.
func (e *Extension) GetValueContactDetail() *ContactDetail {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*ContactDetail)
	if !ok {
		return nil
	}
	return val
}

// GetValueContributor returns the value of the field Value.
func (e *Extension) GetValueContributor() *Contributor {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Contributor)
	if !ok {
		return nil
	}
	return val
}

// GetValueDataRequirement returns the value of the field Value.
func (e *Extension) GetValueDataRequirement() *DataRequirement {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*DataRequirement)
	if !ok {
		return nil
	}
	return val
}

// GetValueExpression returns the value of the field Value.
func (e *Extension) GetValueExpression() *Expression {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Expression)
	if !ok {
		return nil
	}
	return val
}

// GetValueParameterDefinition returns the value of the field Value.
func (e *Extension) GetValueParameterDefinition() *ParameterDefinition {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*ParameterDefinition)
	if !ok {
		return nil
	}
	return val
}

// GetValueRelatedArtifact returns the value of the field Value.
func (e *Extension) GetValueRelatedArtifact() *RelatedArtifact {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*RelatedArtifact)
	if !ok {
		return nil
	}
	return val
}

// GetValueTriggerDefinition returns the value of the field Value.
func (e *Extension) GetValueTriggerDefinition() *TriggerDefinition {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*TriggerDefinition)
	if !ok {
		return nil
	}
	return val
}

// GetValueUsageContext returns the value of the field Value.
func (e *Extension) GetValueUsageContext() *UsageContext {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*UsageContext)
	if !ok {
		return nil
	}
	return val
}

// GetValueDosage returns the value of the field Value.
func (e *Extension) GetValueDosage() *Dosage {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Dosage)
	if !ok {
		return nil
	}
	return val
}

// GetValueMeta returns the value of the field Value.
func (e *Extension) GetValueMeta() *Meta {
	if e == nil {
		return nil
	}
	val, ok := e.Value.(*Meta)
	if !ok {
		return nil
	}
	return val
}
