// GENERATE CODE - DO NOT EDIT
//
// This file is generated by the FHIR Fhenix code generator tool, which can be
// located at https://github.com/friendly-fhir/fhenix.
package fhir

import (
	"github.com/friendly-fhir/go-fhir/r4/core/internal/profileimpl"
)

// Base StructureDefinition for ContactPoint Type: Details for all kinds of
// technology mediated contact points for a person or organization, including
// telephone, email, etc.
//
// Meta Details:
//
//   - Package IG: hl7.fhir.r4.core@4.0.1
//   - StructureDefinition: http://hl7.org/fhir/StructureDefinition/ContactPoint
//   - Source File: StructureDefinition-ContactPoint.json
type ContactPoint struct {

	// May be used to represent additional information that is not part of the
	// basic definition of the element. To make the use of extensions safe and
	// manageable, there is a strict set of governance applied to the definition
	// and use of extensions. Though any implementer can define an extension, there
	// is a set of requirements that SHALL be met as part of the definition of the
	// extension.
	Extension []*Extension `json:"extension"`

	// Unique id for the element within a resource (for internal references). This
	// may be any string value that does not contain spaces.
	Id string `json:"id"`

	// Time period when the contact point was/is in use.
	Period *Period `json:"period"`

	// Specifies a preferred order in which to use a set of contacts. ContactPoints
	// with lower rank values are more preferred than those with higher rank
	// values.
	Rank *PositiveInt `json:"rank"`

	// Telecommunications form for contact point - what communications system is
	// required to make use of the contact.
	System *Code `json:"system"`

	// Identifies the purpose for the contact point.
	Use *Code `json:"use"`

	// The actual contact point details, in a form that is meaningful to the
	// designated communication system (i.e. phone number or email address).
	Value *String `json:"value"`

	profileimpl.BaseElement
}

func (c *ContactPoint) GetExtension() []*Extension {
	if c == nil {
		return nil
	}
	return c.Extension
}

func (c *ContactPoint) GetId() string {
	if c == nil {
		return ""
	}
	return c.Id
}

func (c *ContactPoint) GetPeriod() *Period {
	if c == nil {
		return nil
	}
	return c.Period
}

func (c *ContactPoint) GetRank() *PositiveInt {
	if c == nil {
		return nil
	}
	return c.Rank
}

func (c *ContactPoint) GetSystem() *Code {
	if c == nil {
		return nil
	}
	return c.System
}

func (c *ContactPoint) GetUse() *Code {
	if c == nil {
		return nil
	}
	return c.Use
}

func (c *ContactPoint) GetValue() *String {
	if c == nil {
		return nil
	}
	return c.Value
}
