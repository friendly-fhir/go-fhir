// GENERATE CODE - DO NOT EDIT
//
// This file is generated by the FHIR Fhenix code generator tool, which can be
// located at https://github.com/friendly-fhir/fhenix.
package profileimpl

// {{ .Name | pascalcase }}Profile is a base interface for the {{ .Name }}
// profile resource, which is defined in the exported `profile` package.
//
// This interface is used so that it can be embedded in the exported profile
// package, and keep the interface a closed-type.
//
// This uses an unexported/empty function so that it may only be implemented
// by types in a sibling package by embedding [Base{{ .Name | pascalcase }}].
type {{ .Name | pascalcase }}Profile interface {
  is{{ .Name | pascalcase }}()
}

// Base{{ .Name | pascalcase }} is a base-embeddable struct that implements the
// unexported is{{ .Name | pascalcase }}() function, which enables the
// base profile interface to claim conformance.
type Base{{ .Name | pascalcase }} struct {}

// is{{ .Name | pascalcase }} is an unexported function that is used to claim
// conformance to the {{ .Name | pascalcase }}Profile interface.
func (Base{{ .Name | pascalcase }}) is{{ .Name | pascalcase }}() {}

var _ {{ .Name | pascalcase }}Profile = (*Base{{ .Name | pascalcase }})(nil)
