// GENERATE CODE - DO NOT EDIT
//
// This file is generated by the FHIR Fhenix code generator tool, which can be
// located at https://github.com/friendly-fhir/fhenix.
package profile

import (
  "github.com/friendly-fhir/go-fhir/r4/core/internal/profileimpl"
  "github.com/friendly-fhir/go-fhir/r4/core"
)

{{ define "field" -}}
  {{- $field := . -}}
  {{- $name := .Name | pascalcase -}}
  {{- $type := "any" -}}
  {{- with .Alternatives -}}
  {{- else -}}
    {{- with .Builtin -}}
      {{- if eq .Name "integer" -}}
        {{- $type = "int32" -}}
      {{- else if eq .Name "positiveInt" -}}
        {{- $type = "uint32" -}}
      {{- else if eq .Name "unsignedInt" -}}
        {{- $type = "uint32" -}}
      {{- else if eq .Name "decimal" -}}
        {{- $type = "float64" -}}
      {{- else -}}
        {{- $type = "string" -}}
      {{- end -}}
    {{ end -}}
    {{- with .Type -}}
      {{- $type = .Name | pascalcase | replace "." "" -}}
      {{- if not (.IsAbstract) -}}
        {{- if or (eq .Kind "primitive-type") (eq .Kind "complex-type") -}}
          {{- $type = "fhir." | append $type -}}
        {{- end -}}
        {{- $type = "*" | append $type -}}
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- if .IsList -}}
    {{- $type = "[]" | append $type }}
  {{- end }}
  // Get{{ $name }} returns the value of {{ $field.Name }}. If the value is nil, it
  // returns the default value for the type.
  Get{{ $name }}() {{ $type }}
{{ end -}}

{{- define "base" -}}
  {{ with .Base -}}
  {{- if .IsAbstract -}}
  {{ .Name | pascalcase }}
  {{- end }}
  {{ template "base" . }}
  {{- end }}
{{- end }}

{{- with .Short -}}
{{ . | resize 76 | prefix "// " }}
{{- end -}}
{{- with .Description -}}
{{ . | resize 76 | prefix "// " }}
{{- end -}}
{{- with .Comment -}}
{{ . | resize 76 | prefix "// " }}
{{- end }}
// Source: {{ .URL }}
type {{ .Name | pascalcase }} interface {
{{- range .Fields }}
  {{ template "field" . }}
{{ end }}
  // Implement base {{ .Name | pascalcase }}Profile
  profileimpl.{{ .Name | pascalcase }}Profile
  {{ template "base" . }}
}
