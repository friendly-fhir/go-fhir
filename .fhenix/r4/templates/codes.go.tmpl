// GENERATED CODE - DO NOT EDIT
//
// This file is generated by the FHIR Fhenix code generator tool, which can be
// located at https://github.com/friendly-fhir/fhenix.

package codes

import (
  "encoding/json"
  "encoding/text"
  "fmt"
)

{{- with .Description }}{{ . | resize 76 | prefix "// " }}{{ end }}
//
// CodeSystem: {{ .URL }}
type {{ .Name | pascalcase }} string

{{ $name := .Name | pascalcase }}
const (
{{- range .Codes }}
{{ .Definition | resize 76 | prefix "// " | tabindent 1 }}
  {{ $name }}{{ .Value | pascalcase }} = "{{ .Value }}"
{{ end -}}
)

func Parse{{ .Name | pascalcase }}(value string) ({{ .Name | pascalcase }}, error) {
  switch value {
{{- range .Codes }}
  case "{{ .Value }}":
    return {{ $name }}(value), nil
{{ end }}
  default:
    return "", fmt.Errorf("invalid {{ .Name }} value: %s", value)
  }
}

func MustParse{{ .Name | pascalcase }}(value string) {{ .Name | pascalcase }} {
  v, err := Parse{{ .Name | pascalcase }}(value)
  if err != nil {
    panic(err)
  }
  return v
}

// String returns the string representation of a {{ .Name }}.
func (v {{ .Name | pascalcase }}) String() string {
  return string(v)
}

var _ fmt.Stringer = (*{{ .Name | pascalcase }})(nil)

// MarshalText marshals a {{ .Name }} to text.
func (v *{{ .Name | pascalcase }}) MarshalText() ([]byte, error) {
  return text.Marshal(string(*v))
}

// UnmarshalText unmarshals a {{ .Name }} from text.
func (v *{{ .Name | pascalcase }}) UnmarshalText(data []byte) error {
  return text.Unmarshal(data, (*string)(v))
}

// MarshalJSON marshals a {{ .Name }} to JSON.
func (v *{{ .Name | pascalcase }}) MarshalJSON() ([]byte, error) {
  return json.Marshal(string(*v))
}

// UnmarshalJSON unmarshals a {{ .Name }} from JSON.
func (v *{{ .Name | pascalcase }}) UnmarshalJSON(data []byte) error {
  return json.Unmarshal(data, (*string)(v))
}

// Validate checks that the value is a valid {{ .Name }} code.
func (v {{ .Name | pascalcase }}) Validate() error {
  _, err := Parse{{ .Name | pascalcase }}(string(v))
  return err
}

var _ json.Marshaler = (*{{ .Name | pascalcase }})(nil)
var _ json.Unmarshaler = (*{{ .Name | pascalcase }})(nil)
